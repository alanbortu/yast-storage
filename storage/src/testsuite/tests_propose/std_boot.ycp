/**
 * File:
 *  
 *  testcase for partition proposal
 *
 * Authors:
 *   Michael Hager <mike@suse.de>
 *
 * $Id$
 *
 * 
 */

{

// sample target map used for testing


////////////////////////////////////////////////////////////////////////////////  
//                           TESTCASES
////////////////////////////////////////////////////////////////////////////////  
   
   map test_winonly = $[
  "/dev/hdc":
	$[
	  "bus" : "IDE", "cyl_count" : 53040, "cyl_size" : 516096,
	  "device" : "/dev/hdc", "name" : "3. IDE, 25.49 GB, /dev/hdc, (windows full)",
	  "partitions" : [
	    $["fsid" : 12, "fstype" : "FAT32",
	      "nr" : 1, "region" : [0, 53040 ], "type" : `primary
	      ]
	  ],
	  "vendor" : "WDC"
	]
   ];

   map test_4winonly = $[
  "/dev/hdd":
	$[
	  "bus" : "IDE", "cyl_count" : 5533, "cyl_size" : 1000000,
	  "device" : "/dev/hdc", "name" : "4. IDE, 25.49 GB, /dev/hdd, (full)",
	  "partitions" : [
	    $["fsid" : 131, "fstype" : "Linux",
	      "nr" : 1, "region" : [ 0, 20 ], "type" : `primary
	      ],
	    $["fsid" : 130, "fstype" : "Swap",
	      "nr" : 2, "region" : [ 20, 513 ], "type" : `primary
	      ],
	    $["fsid" : 131, "fstype" : "Linux",
	      "nr" : 4, "region" : [ 533, 5000 ], "type" : `primary
	      ]
	  ],
	  "vendor" : "WDC"
	]
   ];

   
  

   textdomain "storage";

   import "Arch";
   import "Storage";

   // map targetMap = test_free_space;
   map targetMap = test_4winonly;
   Storage::SetTargetMap( targetMap );
   Mode::test = true;

   ///////////////////////////////////////////////////////////////////////////
   ///////////////////////////////////////////////////////////////////////////
   // SIMULATE OLD SYSTEM WITHOUT LBA SUPPORT
   ///////////////////////////////////////////////////////////////////////////
   ///////////////////////////////////////////////////////////////////////////

   Storage::SetTestsuite( true );

   import "BootLILO";
   BootLILO::lba_support = false;

   include "partitioning/do_proposal.ycp";

   map ret = Storage::GetTargetMap();
   Storage::SetTargetMap( targetMap );
   ret = do_proposal();


}   
