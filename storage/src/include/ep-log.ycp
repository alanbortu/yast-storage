/*
 * Copyright (c) 2012 Novell, Inc.
 *
 * All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of version 2 of the GNU General Public License as published
 * by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may
 * find current contact information at www.novell.com.
 */

/**
 * File:	ep-log.ycp
 * Package:	yast2-storage
 * Summary:	Expert Partitioner
 * Authors:	Arvin Schnell <aschnell@suse.de>
 *
 * This file must only be included in other Expert Partitioner files ("ep-*.ycp").
 */
{
    textdomain "storage";

    import "LogViewCore";


    void CreateLogPanel(any user_data)
    {
	string file = "/var/log/messages";

	UI::ReplaceWidget(`tree_panel,
			  Greasemonkey::Transform(
			      `VBox(
				  // heading
				  `IconAndHeading(_("Log"), StorageIcons::log_icon),
				  // label for log view
				  `LogView(`id(`log), sformat(_("Contents of %1:"), file), 10, 0),
				  // push button text
				  `PushButton(`id(`update), _("Update"))
				  )
			      ));

	// helptext, %1 is replaced by a filename
	string helptext = sformat(_("This view shows the content of %1."), file);

	Wizard::RestoreHelp(helptext);

	LogViewCore::Start(`id(`log), $[ "file" : file ]);
    }


    void HandleLogPanel(any user_data, map event)
    {
	switch (Event::IsWidgetActivated(event))
	{
	    case `update:
		LogViewCore::Update(`id(`log));
		break;
	}

	switch (Event::IsTimeout(event))
	{
	    case `timeout:
		LogViewCore::Update(`id(`log));
		break;
	}
    }


    void DestroyLogPanel(any user_data)
    {
	LogViewCore::Stop();
    }
}
